/* 
 * Invoice Ninja
 *
 * Invoice Ninja. Open Source Invoicing lives here. 
 *
 * OpenAPI spec version: 5.1.20
 * Contact: contact@invoiceninja.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = InvoiceNinjaSDK.SwaggerDateConverter;

namespace InvoiceNinjaSDK.Model
{
    /// <summary>
    /// ModelClient
    /// </summary>
    [DataContract]
        public partial class ModelClient :  IEquatable<ModelClient>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelClient" /> class.
        /// </summary>
        /// <param name="id">_________.</param>
        /// <param name="userId">__________.</param>
        /// <param name="companyId">________.</param>
        /// <param name="contacts">contacts.</param>
        /// <param name="name">________.</param>
        /// <param name="website">________.</param>
        /// <param name="privateNotes">________.</param>
        /// <param name="clientHash">________.</param>
        /// <param name="industryId">________.</param>
        /// <param name="sizeId">________.</param>
        /// <param name="address1">________.</param>
        /// <param name="address2">________.</param>
        /// <param name="city">________.</param>
        /// <param name="state">________.</param>
        /// <param name="postalCode">________.</param>
        /// <param name="phone">The client phone number.</param>
        /// <param name="countryId">________.</param>
        /// <param name="customValue1">________.</param>
        /// <param name="customValue2">________.</param>
        /// <param name="customValue3">________.</param>
        /// <param name="customValue4">________.</param>
        /// <param name="vatNumber">________.</param>
        /// <param name="idNumber">________.</param>
        /// <param name="number">________.</param>
        /// <param name="shippingAddress1">________.</param>
        /// <param name="shippingAddress2">________.</param>
        /// <param name="shippingCity">________.</param>
        /// <param name="shippingState">________.</param>
        /// <param name="shippingPostalCode">________.</param>
        /// <param name="shippingCountryId">________.</param>
        /// <param name="isDeleted">________.</param>
        /// <param name="balance">________.</param>
        /// <param name="paidToDate">________.</param>
        /// <param name="creditBalance">An amount which is available to the client for future use..</param>
        /// <param name="lastLogin">Timestamp.</param>
        /// <param name="createdAt">Timestamp.</param>
        /// <param name="updatedAt">Timestamp.</param>
        /// <param name="settings">settings.</param>
        public ModelClient(string id = default(string), string userId = default(string), string companyId = default(string), List<ClientContact> contacts = default(List<ClientContact>), string name = default(string), string website = default(string), string privateNotes = default(string), string clientHash = default(string), string industryId = default(string), string sizeId = default(string), string address1 = default(string), string address2 = default(string), string city = default(string), string state = default(string), string postalCode = default(string), string phone = default(string), string countryId = default(string), string customValue1 = default(string), string customValue2 = default(string), string customValue3 = default(string), string customValue4 = default(string), string vatNumber = default(string), string idNumber = default(string), string number = default(string), string shippingAddress1 = default(string), string shippingAddress2 = default(string), string shippingCity = default(string), string shippingState = default(string), string shippingPostalCode = default(string), string shippingCountryId = default(string), bool? isDeleted = default(bool?), float? balance = default(float?), float? paidToDate = default(float?), float? creditBalance = default(float?), decimal? lastLogin = default(decimal?), decimal? createdAt = default(decimal?), decimal? updatedAt = default(decimal?), CompanySettings settings = default(CompanySettings))
        {
            this.Id = id;
            this.UserId = userId;
            this.CompanyId = companyId;
            this.Contacts = contacts;
            this.Name = name;
            this.Website = website;
            this.PrivateNotes = privateNotes;
            this.ClientHash = clientHash;
            this.IndustryId = industryId;
            this.SizeId = sizeId;
            this.Address1 = address1;
            this.Address2 = address2;
            this.City = city;
            this.State = state;
            this.PostalCode = postalCode;
            this.Phone = phone;
            this.CountryId = countryId;
            this.CustomValue1 = customValue1;
            this.CustomValue2 = customValue2;
            this.CustomValue3 = customValue3;
            this.CustomValue4 = customValue4;
            this.VatNumber = vatNumber;
            this.IdNumber = idNumber;
            this.Number = number;
            this.ShippingAddress1 = shippingAddress1;
            this.ShippingAddress2 = shippingAddress2;
            this.ShippingCity = shippingCity;
            this.ShippingState = shippingState;
            this.ShippingPostalCode = shippingPostalCode;
            this.ShippingCountryId = shippingCountryId;
            this.IsDeleted = isDeleted;
            this.Balance = balance;
            this.PaidToDate = paidToDate;
            this.CreditBalance = creditBalance;
            this.LastLogin = lastLogin;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.Settings = settings;
        }
        
        /// <summary>
        /// _________
        /// </summary>
        /// <value>_________</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// __________
        /// </summary>
        /// <value>__________</value>
        [DataMember(Name="user_id", EmitDefaultValue=false)]
        public string UserId { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="company_id", EmitDefaultValue=false)]
        public string CompanyId { get; set; }

        /// <summary>
        /// Gets or Sets Contacts
        /// </summary>
        [DataMember(Name="contacts", EmitDefaultValue=false)]
        public List<ClientContact> Contacts { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="private_notes", EmitDefaultValue=false)]
        public string PrivateNotes { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="client_hash", EmitDefaultValue=false)]
        public string ClientHash { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="industry_id", EmitDefaultValue=false)]
        public string IndustryId { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="size_id", EmitDefaultValue=false)]
        public string SizeId { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="address1", EmitDefaultValue=false)]
        public string Address1 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="postal_code", EmitDefaultValue=false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// The client phone number
        /// </summary>
        /// <value>The client phone number</value>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="country_id", EmitDefaultValue=false)]
        public string CountryId { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="custom_value1", EmitDefaultValue=false)]
        public string CustomValue1 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="custom_value2", EmitDefaultValue=false)]
        public string CustomValue2 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="custom_value3", EmitDefaultValue=false)]
        public string CustomValue3 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="custom_value4", EmitDefaultValue=false)]
        public string CustomValue4 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="vat_number", EmitDefaultValue=false)]
        public string VatNumber { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="id_number", EmitDefaultValue=false)]
        public string IdNumber { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="number", EmitDefaultValue=false)]
        public string Number { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_address1", EmitDefaultValue=false)]
        public string ShippingAddress1 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_address2", EmitDefaultValue=false)]
        public string ShippingAddress2 { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_city", EmitDefaultValue=false)]
        public string ShippingCity { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_state", EmitDefaultValue=false)]
        public string ShippingState { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_postal_code", EmitDefaultValue=false)]
        public string ShippingPostalCode { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="shipping_country_id", EmitDefaultValue=false)]
        public string ShippingCountryId { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="is_deleted", EmitDefaultValue=false)]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="balance", EmitDefaultValue=false)]
        public float? Balance { get; set; }

        /// <summary>
        /// ________
        /// </summary>
        /// <value>________</value>
        [DataMember(Name="paid_to_date", EmitDefaultValue=false)]
        public float? PaidToDate { get; set; }

        /// <summary>
        /// An amount which is available to the client for future use.
        /// </summary>
        /// <value>An amount which is available to the client for future use.</value>
        [DataMember(Name="credit_balance", EmitDefaultValue=false)]
        public float? CreditBalance { get; set; }

        /// <summary>
        /// Timestamp
        /// </summary>
        /// <value>Timestamp</value>
        [DataMember(Name="last_login", EmitDefaultValue=false)]
        public decimal? LastLogin { get; set; }

        /// <summary>
        /// Timestamp
        /// </summary>
        /// <value>Timestamp</value>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public decimal? CreatedAt { get; set; }

        /// <summary>
        /// Timestamp
        /// </summary>
        /// <value>Timestamp</value>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public decimal? UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name="settings", EmitDefaultValue=false)]
        public CompanySettings Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelClient {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  Contacts: ").Append(Contacts).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  PrivateNotes: ").Append(PrivateNotes).Append("\n");
            sb.Append("  ClientHash: ").Append(ClientHash).Append("\n");
            sb.Append("  IndustryId: ").Append(IndustryId).Append("\n");
            sb.Append("  SizeId: ").Append(SizeId).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  CountryId: ").Append(CountryId).Append("\n");
            sb.Append("  CustomValue1: ").Append(CustomValue1).Append("\n");
            sb.Append("  CustomValue2: ").Append(CustomValue2).Append("\n");
            sb.Append("  CustomValue3: ").Append(CustomValue3).Append("\n");
            sb.Append("  CustomValue4: ").Append(CustomValue4).Append("\n");
            sb.Append("  VatNumber: ").Append(VatNumber).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  ShippingAddress1: ").Append(ShippingAddress1).Append("\n");
            sb.Append("  ShippingAddress2: ").Append(ShippingAddress2).Append("\n");
            sb.Append("  ShippingCity: ").Append(ShippingCity).Append("\n");
            sb.Append("  ShippingState: ").Append(ShippingState).Append("\n");
            sb.Append("  ShippingPostalCode: ").Append(ShippingPostalCode).Append("\n");
            sb.Append("  ShippingCountryId: ").Append(ShippingCountryId).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  Balance: ").Append(Balance).Append("\n");
            sb.Append("  PaidToDate: ").Append(PaidToDate).Append("\n");
            sb.Append("  CreditBalance: ").Append(CreditBalance).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelClient);
        }

        /// <summary>
        /// Returns true if ModelClient instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelClient to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelClient input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.CompanyId == input.CompanyId ||
                    (this.CompanyId != null &&
                    this.CompanyId.Equals(input.CompanyId))
                ) && 
                (
                    this.Contacts == input.Contacts ||
                    this.Contacts != null &&
                    input.Contacts != null &&
                    this.Contacts.SequenceEqual(input.Contacts)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                ) && 
                (
                    this.PrivateNotes == input.PrivateNotes ||
                    (this.PrivateNotes != null &&
                    this.PrivateNotes.Equals(input.PrivateNotes))
                ) && 
                (
                    this.ClientHash == input.ClientHash ||
                    (this.ClientHash != null &&
                    this.ClientHash.Equals(input.ClientHash))
                ) && 
                (
                    this.IndustryId == input.IndustryId ||
                    (this.IndustryId != null &&
                    this.IndustryId.Equals(input.IndustryId))
                ) && 
                (
                    this.SizeId == input.SizeId ||
                    (this.SizeId != null &&
                    this.SizeId.Equals(input.SizeId))
                ) && 
                (
                    this.Address1 == input.Address1 ||
                    (this.Address1 != null &&
                    this.Address1.Equals(input.Address1))
                ) && 
                (
                    this.Address2 == input.Address2 ||
                    (this.Address2 != null &&
                    this.Address2.Equals(input.Address2))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.CountryId == input.CountryId ||
                    (this.CountryId != null &&
                    this.CountryId.Equals(input.CountryId))
                ) && 
                (
                    this.CustomValue1 == input.CustomValue1 ||
                    (this.CustomValue1 != null &&
                    this.CustomValue1.Equals(input.CustomValue1))
                ) && 
                (
                    this.CustomValue2 == input.CustomValue2 ||
                    (this.CustomValue2 != null &&
                    this.CustomValue2.Equals(input.CustomValue2))
                ) && 
                (
                    this.CustomValue3 == input.CustomValue3 ||
                    (this.CustomValue3 != null &&
                    this.CustomValue3.Equals(input.CustomValue3))
                ) && 
                (
                    this.CustomValue4 == input.CustomValue4 ||
                    (this.CustomValue4 != null &&
                    this.CustomValue4.Equals(input.CustomValue4))
                ) && 
                (
                    this.VatNumber == input.VatNumber ||
                    (this.VatNumber != null &&
                    this.VatNumber.Equals(input.VatNumber))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                ) && 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.ShippingAddress1 == input.ShippingAddress1 ||
                    (this.ShippingAddress1 != null &&
                    this.ShippingAddress1.Equals(input.ShippingAddress1))
                ) && 
                (
                    this.ShippingAddress2 == input.ShippingAddress2 ||
                    (this.ShippingAddress2 != null &&
                    this.ShippingAddress2.Equals(input.ShippingAddress2))
                ) && 
                (
                    this.ShippingCity == input.ShippingCity ||
                    (this.ShippingCity != null &&
                    this.ShippingCity.Equals(input.ShippingCity))
                ) && 
                (
                    this.ShippingState == input.ShippingState ||
                    (this.ShippingState != null &&
                    this.ShippingState.Equals(input.ShippingState))
                ) && 
                (
                    this.ShippingPostalCode == input.ShippingPostalCode ||
                    (this.ShippingPostalCode != null &&
                    this.ShippingPostalCode.Equals(input.ShippingPostalCode))
                ) && 
                (
                    this.ShippingCountryId == input.ShippingCountryId ||
                    (this.ShippingCountryId != null &&
                    this.ShippingCountryId.Equals(input.ShippingCountryId))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    (this.IsDeleted != null &&
                    this.IsDeleted.Equals(input.IsDeleted))
                ) && 
                (
                    this.Balance == input.Balance ||
                    (this.Balance != null &&
                    this.Balance.Equals(input.Balance))
                ) && 
                (
                    this.PaidToDate == input.PaidToDate ||
                    (this.PaidToDate != null &&
                    this.PaidToDate.Equals(input.PaidToDate))
                ) && 
                (
                    this.CreditBalance == input.CreditBalance ||
                    (this.CreditBalance != null &&
                    this.CreditBalance.Equals(input.CreditBalance))
                ) && 
                (
                    this.LastLogin == input.LastLogin ||
                    (this.LastLogin != null &&
                    this.LastLogin.Equals(input.LastLogin))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.Settings == input.Settings ||
                    (this.Settings != null &&
                    this.Settings.Equals(input.Settings))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.CompanyId != null)
                    hashCode = hashCode * 59 + this.CompanyId.GetHashCode();
                if (this.Contacts != null)
                    hashCode = hashCode * 59 + this.Contacts.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                if (this.PrivateNotes != null)
                    hashCode = hashCode * 59 + this.PrivateNotes.GetHashCode();
                if (this.ClientHash != null)
                    hashCode = hashCode * 59 + this.ClientHash.GetHashCode();
                if (this.IndustryId != null)
                    hashCode = hashCode * 59 + this.IndustryId.GetHashCode();
                if (this.SizeId != null)
                    hashCode = hashCode * 59 + this.SizeId.GetHashCode();
                if (this.Address1 != null)
                    hashCode = hashCode * 59 + this.Address1.GetHashCode();
                if (this.Address2 != null)
                    hashCode = hashCode * 59 + this.Address2.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.CountryId != null)
                    hashCode = hashCode * 59 + this.CountryId.GetHashCode();
                if (this.CustomValue1 != null)
                    hashCode = hashCode * 59 + this.CustomValue1.GetHashCode();
                if (this.CustomValue2 != null)
                    hashCode = hashCode * 59 + this.CustomValue2.GetHashCode();
                if (this.CustomValue3 != null)
                    hashCode = hashCode * 59 + this.CustomValue3.GetHashCode();
                if (this.CustomValue4 != null)
                    hashCode = hashCode * 59 + this.CustomValue4.GetHashCode();
                if (this.VatNumber != null)
                    hashCode = hashCode * 59 + this.VatNumber.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                if (this.Number != null)
                    hashCode = hashCode * 59 + this.Number.GetHashCode();
                if (this.ShippingAddress1 != null)
                    hashCode = hashCode * 59 + this.ShippingAddress1.GetHashCode();
                if (this.ShippingAddress2 != null)
                    hashCode = hashCode * 59 + this.ShippingAddress2.GetHashCode();
                if (this.ShippingCity != null)
                    hashCode = hashCode * 59 + this.ShippingCity.GetHashCode();
                if (this.ShippingState != null)
                    hashCode = hashCode * 59 + this.ShippingState.GetHashCode();
                if (this.ShippingPostalCode != null)
                    hashCode = hashCode * 59 + this.ShippingPostalCode.GetHashCode();
                if (this.ShippingCountryId != null)
                    hashCode = hashCode * 59 + this.ShippingCountryId.GetHashCode();
                if (this.IsDeleted != null)
                    hashCode = hashCode * 59 + this.IsDeleted.GetHashCode();
                if (this.Balance != null)
                    hashCode = hashCode * 59 + this.Balance.GetHashCode();
                if (this.PaidToDate != null)
                    hashCode = hashCode * 59 + this.PaidToDate.GetHashCode();
                if (this.CreditBalance != null)
                    hashCode = hashCode * 59 + this.CreditBalance.GetHashCode();
                if (this.LastLogin != null)
                    hashCode = hashCode * 59 + this.LastLogin.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.Settings != null)
                    hashCode = hashCode * 59 + this.Settings.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
